<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1162,8382" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:maes="clr-namespace:Microsoft.Activities.Extensions.Statements;assembly=Microsoft.Activities.Extensions" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:swf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms" xmlns:u="clr-namespace:UiPathTeam_StatusProgress_Activities;assembly=UiPathTeam.StatusProgress.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upap="clr-namespace:UiPath.PDF.Activities.PDF;assembly=UiPath.PDF.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="63">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Core.Activities.SAP</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>UiPath.Shared.ObjectLibrary</x:String>
      <x:String>UiPath.CV.Activities</x:String>
      <x:String>UiPath.CV.Activities.Interfaces</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.Activities.Extensions.Statements</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Activities.Utils</x:String>
      <x:String>UiPath.Mail.Activities.Business.HtmlEditor</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.PDF.Activities.PDF</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>System.Windows.Forms.Layout</x:String>
      <x:String>UiPathTeam_StatusProgress_Activities</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System.Windows.Forms.Automation</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="45">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.AzureWVD</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Activities.Extensions</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>UiPathTeam.StatusProgress.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="Main_Sequence" sap:VirtualizedContainerService.HintSize="1172,8317" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="PDFdata" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="RollNums" />
      <Variable x:TypeArguments="x:Int32" Name="PageNo" />
      <Variable x:TypeArguments="s:String[]" Name="PdfFiles" />
      <Variable x:TypeArguments="scg:IDictionary(x:String, x:Int32)" Default="[new Dictionary(of string, Int32)]" Name="RollNoToPageNo" />
      <Variable x:TypeArguments="x:Int32" Name="PdfNo" />
      <Variable x:TypeArguments="scg:IDictionary(x:String, scg:List(x:Int32))" Default="[new Dictionary(of string, List(of Int32))]" Name="RollNoToPdfAndPage" />
      <Variable x:TypeArguments="scg:IDictionary(x:Int32, x:String)" Default="[new Dictionary(of int32, string)]" Name="PdfNoToFilePath" />
      <Variable x:TypeArguments="sd:DataTable" Name="ExcelDataTable" />
      <Variable x:TypeArguments="x:String" Name="ExcelDataString" />
      <Variable x:TypeArguments="swf:Form" Name="LiveStatus" />
      <Variable x:TypeArguments="x:Double" Default="0.01" Name="LiveProgress" />
      <Variable x:TypeArguments="x:String" Name="CurrentDir" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:GetEnvironmentVariable DisplayName="Get Environment Variable" sap:VirtualizedContainerService.HintSize="1130,59" sap2010:WorkflowViewState.IdRef="GetEnvironmentVariable_1" Variable="CurrentDirectory" VariableValue="[CurrentDir]" />
    <u:Live_Status ColorText="{x:Null}" ProgressAutoClose="{x:Null}" ColorBackground="white" ColorBorder="blue" Container="[LiveStatus]" DisplayName="Live Status" sap:VirtualizedContainerService.HintSize="1130,22" sap2010:WorkflowViewState.IdRef="Live_Status_1" Location="[{&quot;center&quot;,&quot;center&quot;}]" Message="Welcome, Getting all Admit card Pdf files..." Mobile="True" Opacity="1" Progress="[LiveProgress]" Top="True" />
    <Assign sap:VirtualizedContainerService.HintSize="1130,60" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[PdfFiles]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(CurrentDir+"\Input", "*.pdf")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign-Initialising PdfNo" sap:VirtualizedContainerService.HintSize="1130,60" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[PdfNo]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1130,3038" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[PdfFiles]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="PdfFile" />
          </ActivityAction.Argument>
          <Sequence DisplayName="PdfFiles Body" sap:VirtualizedContainerService.HintSize="951,2913" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="909,60" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[PdfNo]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[PdfNo+1]</InArgument>
              </Assign.Value>
            </Assign>
            <maes:AddToDictionary x:TypeArguments="x:Int32, x:String" Dictionary="[PdfNoToFilePath]" DisplayName="Add to dictionary" sap:VirtualizedContainerService.HintSize="909,138" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_4" Key="[PdfNo]" Value="[PdfFile.ToString]" />
            <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" FileName="[PdfFile.ToString]" sap:VirtualizedContainerService.HintSize="909,59" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[PDFdata]" />
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="909,304" sap2010:WorkflowViewState.IdRef="CommentOut_5">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,226" sap2010:WorkflowViewState.IdRef="Sequence_27">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:WriteTextFile DisplayName="Write Text File" FileName="[CurrentDir+&quot;\debug\output.txt&quot;]" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[PDFdata]" />
                </Sequence>
              </ui:CommentOut.Body>
            </ui:CommentOut>
            <Sequence DisplayName="LiveStatus_Sequence" sap:VirtualizedContainerService.HintSize="909,214" sap2010:WorkflowViewState.IdRef="Sequence_23">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="LiveMessage" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[LiveMessage]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">["Fetching All Roll numbers from PDF no. " + PdfNo.ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <u:Live_Status ColorText="{x:Null}" ColorBackground="white" ColorBorder="blue" Container="[LiveStatus]" DisplayName="Live Status" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Live_Status_4" Location="[{&quot;center&quot;,&quot;center&quot;}]" Message="[LiveMessage]" Mobile="True" Opacity="1" Progress="[LiveProgress]" Top="True">
                <u:Live_Status.ProgressAutoClose>
                  <InArgument x:TypeArguments="x:Boolean" />
                </u:Live_Status.ProgressAutoClose>
              </u:Live_Status>
            </Sequence>
            <ui:Matches BuilderPattern="(?&lt;=Roll No.: )\w+" sap:VirtualizedContainerService.HintSize="909,59" sap2010:WorkflowViewState.IdRef="Matches_1" Input="[PDFdata]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(?&lt;=Roll No.: )\\w+&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(?&lt;=Roll No.: )\w+" RegexOption="IgnoreCase, Compiled" Result="[RollNums]" />
            <Assign sap:VirtualizedContainerService.HintSize="909,60" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[PageNo]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">1</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="909,1647" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[RollNums]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="RollNum" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="ForEachRollNoBody" sap:VirtualizedContainerService.HintSize="873,1522" sap2010:WorkflowViewState.IdRef="Sequence_2">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Boolean" Name="isKeyExits" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="831,62" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[RollNum.ToString + &quot;      &quot; + PageNo.ToString]" />
                    <maes:KeyExistsInDictionary x:TypeArguments="x:String, x:Int32" Dictionary="[RollNoToPageNo]" DisplayName="Key exists in dictionary" sap:VirtualizedContainerService.HintSize="831,138" sap2010:WorkflowViewState.IdRef="KeyExistsInDictionary`2_1" Key="[RollNum.ToString]" Result="[isKeyExits]" />
                    <If Condition="[isKeyExits=False]" sap:VirtualizedContainerService.HintSize="831,1050" sap2010:WorkflowViewState.IdRef="If_1">
                      <If.Then>
                        <Sequence DisplayName="IfKeyExitBlock" sap:VirtualizedContainerService.HintSize="440,890" sap2010:WorkflowViewState.IdRef="Sequence_6">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:List(x:Int32)" Default="[New List(of Int32)]" Name="TempList" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <maes:AddToDictionary x:TypeArguments="x:String, x:Int32" Dictionary="[RollNoToPageNo]" DisplayName="Add to dictionary" sap:VirtualizedContainerService.HintSize="398,138" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_2" Key="[RollNum.ToString]" Value="[PageNo]" />
                          <AddToCollection x:TypeArguments="x:Int32" Collection="[TempList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="398,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="[PdfNo]" />
                          <AddToCollection x:TypeArguments="x:Int32" Collection="[TempList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="398,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="[PageNo]" />
                          <maes:AddToDictionary x:TypeArguments="x:String, scg:List(x:Int32)" Dictionary="[RollNoToPdfAndPage]" DisplayName="Add to dictionary" sap:VirtualizedContainerService.HintSize="398,138" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_3" Key="[RollNum.ToString]" Value="[TempList]" />
                          <Sequence DisplayName="LiveStatus_Sequence" sap:VirtualizedContainerService.HintSize="398,318" sap2010:WorkflowViewState.IdRef="Sequence_18">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="LiveMessage" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="262,64" sap2010:WorkflowViewState.IdRef="Assign_8">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[LiveMessage]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String" xml:space="preserve">["Storing " + RollNum.ToString + " from PDF number : " +PdfNo.ToString +
vbNewLine + 
"Total Roll. no stored : " + RollNoToPageNo.Count.ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Double">[LiveProgress]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Double">[(PdfNo/PdfFiles.Count)*0.3]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <u:Live_Status ColorText="{x:Null}" ColorBackground="white" ColorBorder="blue" Container="[LiveStatus]" DisplayName="Live Status" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Live_Status_2" Location="[{&quot;center&quot;,&quot;center&quot;}]" Message="[LiveMessage]" Mobile="True" Opacity="1" Progress="[LiveProgress]" Top="True">
                              <u:Live_Status.ProgressAutoClose>
                                <InArgument x:TypeArguments="x:Boolean" />
                              </u:Live_Status.ProgressAutoClose>
                            </u:Live_Status>
                          </Sequence>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="346,310" sap2010:WorkflowViewState.IdRef="Sequence_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="LiveStatus_Sequence" sap:VirtualizedContainerService.HintSize="304,218" sap2010:WorkflowViewState.IdRef="Sequence_24">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="LiveMessage" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="262,64" sap2010:WorkflowViewState.IdRef="Assign_14">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[LiveMessage]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String" xml:space="preserve">["Skipping  " + RollNum.ToString + " from Duplicate Admit card "+
vbNewLine + 
"Total Roll. no stored : " + RollNoToPageNo.Count.ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <u:Live_Status ColorText="{x:Null}" ColorBackground="white" ColorBorder="blue" Container="[LiveStatus]" DisplayName="Live Status" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Live_Status_5" Location="[{&quot;center&quot;,&quot;center&quot;}]" Message="[LiveMessage]" Mobile="True" Opacity="1" Progress="[LiveProgress]" Top="True">
                              <u:Live_Status.ProgressAutoClose>
                                <InArgument x:TypeArguments="x:Boolean" />
                              </u:Live_Status.ProgressAutoClose>
                            </u:Live_Status>
                          </Sequence>
                        </Sequence>
                      </If.Else>
                    </If>
                    <Assign sap:VirtualizedContainerService.HintSize="831,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[PageNo]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[PageNo + 1]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1130,858" sap2010:WorkflowViewState.IdRef="CommentOut_2">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="518,780" sap2010:WorkflowViewState.IdRef="Sequence_21">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Debug_Sequence" sap:VirtualizedContainerService.HintSize="476,688" sap2010:WorkflowViewState.IdRef="Sequence_20">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="434,278" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[RollNoToPageNo]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="272,154" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,62" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[item.ToString]" />
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="434,278" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[RollNoToPdfAndPage.Keys]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="DicKey" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="272,154" sap2010:WorkflowViewState.IdRef="Sequence_8">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,62" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[DicKey.ToString + &quot;     &quot; + RollNoToPdfAndPage(Dickey.ToString)(0).ToString + &quot;    &quot;  +  RollNoToPdfAndPage(Dickey.ToString)(1).ToString + &quot;     &quot; + PdfNoToFilePath(RollNoToPdfAndPage(Dickey.ToString)(0))]" />
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <Sequence DisplayName="Sequence_ExtractExcelData" sap:VirtualizedContainerService.HintSize="1130,828" sap2010:WorkflowViewState.IdRef="Sequence_9">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="LiveStatus_Sequence" sap:VirtualizedContainerService.HintSize="434,214" sap2010:WorkflowViewState.IdRef="Sequence_25">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="LiveMessage" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_16">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[LiveMessage]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">["Extracting data from Input Excel File... "]</InArgument>
          </Assign.Value>
        </Assign>
        <u:Live_Status ColorText="{x:Null}" ColorBackground="white" ColorBorder="blue" Container="[LiveStatus]" DisplayName="Live Status" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Live_Status_6" Location="[{&quot;center&quot;,&quot;center&quot;}]" Message="[LiveMessage]" Mobile="True" Opacity="1" Progress="[LiveProgress]" Top="True">
          <u:Live_Status.ProgressAutoClose>
            <InArgument x:TypeArguments="x:Boolean" />
          </u:Live_Status.ProgressAutoClose>
        </u:Live_Status>
      </Sequence>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,380" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[CurrentDir+&quot;\Input\Input_Dcoe.xlsx&quot;]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,271" sap2010:WorkflowViewState.IdRef="Sequence_10">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelReadRange AddHeaders="True" DataTable="[ExcelDataTable]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Sheet1">
                <ui:ExcelReadRange.Range>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:ExcelReadRange.Range>
              </ui:ExcelReadRange>
              <ui:OutputDataTable DataTable="[ExcelDataTable]" DisplayName="Output Data Table" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="OutputDataTable_1" Text="[ExcelDataString]" />
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
      </ui:ExcelApplicationScope>
      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,62" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[ExcelDataString]" />
    </Sequence>
    <Sequence DisplayName="Sequence_SendEmail" sap:VirtualizedContainerService.HintSize="1130,3020" sap2010:WorkflowViewState.IdRef="Sequence_11">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="ErrorMsg" />
        <Variable x:TypeArguments="x:Int32" Name="ErrorCount" />
        <Variable x:TypeArguments="x:String" Name="FinalSummary" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="1088,60" sap2010:WorkflowViewState.IdRef="Assign_18">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[ErrorCount]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="1088,60" sap2010:WorkflowViewState.IdRef="Assign_17">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[ErrorMsg]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[""]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[ExcelDataTable]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="1088,2159" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
            </ActivityAction.Argument>
            <Sequence DisplayName="ForEachRowInDataTable_Body" sap:VirtualizedContainerService.HintSize="1054,2038" sap2010:WorkflowViewState.IdRef="Sequence_12">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Boolean" Name="IsRollNoPresent" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <maes:KeyExistsInDictionary x:TypeArguments="x:String, scg:List(x:Int32)" Dictionary="[RollNoToPdfAndPage]" DisplayName="Key exists in dictionary" sap:VirtualizedContainerService.HintSize="1012,138" sap2010:WorkflowViewState.IdRef="KeyExistsInDictionary`2_2" Key="[CurrentRow(2).ToString]" Result="[IsRollNoPresent]" />
              <If Condition="[(IsRollNoPresent = True) AndAlso CurrentRow(6).ToString &lt;&gt; &quot;&quot;]" sap:VirtualizedContainerService.HintSize="1012,1768" sap2010:WorkflowViewState.IdRef="If_2">
                <If.Then>
                  <Sequence DisplayName="Sequence_CurrentRowInExcel" sap:VirtualizedContainerService.HintSize="663,1608" sap2010:WorkflowViewState.IdRef="Sequence_13">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Int32" Name="PageCount" />
                      <Variable x:TypeArguments="x:String" Name="PdfOriginalPath" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="621,62" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="[CurrentRow(2).ToString + &quot;    &quot; + CurrentRow(6).ToString]" />
                    <upap:GetPDFPageCount DisplayName="Get PDF Page Count" FileName="[PdfNoToFilePath(RollNoToPdfAndPage(CurrentRow(2).ToString)(0))]" sap:VirtualizedContainerService.HintSize="621,59" sap2010:WorkflowViewState.IdRef="GetPDFPageCount_1" PageCount="[PageCount]" />
                    <Assign sap:VirtualizedContainerService.HintSize="621,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[PdfOriginalPath]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[CurrentDir+"\debug\Original\"+CurrentRow(2).ToString+".pdf"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <upap:ExtractPDFPageRange DisplayName="Extract PDF Page Range" FileName="[PdfNoToFilePath(RollNoToPdfAndPage(CurrentRow(2).ToString)(0))]" sap:VirtualizedContainerService.HintSize="621,87" sap2010:WorkflowViewState.IdRef="ExtractPDFPageRange_1" OutputFileName="[CurrentDir+&quot;\debug\Original\&quot;+CurrentRow(2).ToString+&quot;.pdf&quot;]" Range="[RollNoToPdfAndPage(CurrentRow(2).ToString)(1).ToString]" />
                    <If Condition="[PageCount Mod 2 = 0]" sap:VirtualizedContainerService.HintSize="621,414" sap2010:WorkflowViewState.IdRef="If_3">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="272,154" sap2010:WorkflowViewState.IdRef="Sequence_15">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,62" sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="[(Convert.ToInt32(PageCount)/2 + Convert.ToInt32(RollNoToPdfAndPage(CurrentRow(2).ToString)(1))).ToString]" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,254" sap2010:WorkflowViewState.IdRef="Sequence_16">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[PageCount]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[PageCount-1]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="WriteLine_9" Text="[(Convert.ToInt32(PageCount)/2 + Convert.ToInt32(RollNoToPdfAndPage(CurrentRow(2).ToString)(1))).ToString]" />
                        </Sequence>
                      </If.Else>
                    </If>
                    <upap:ExtractPDFPageRange DisplayName="Extract PDF Page Range" FileName="[PdfNoToFilePath(RollNoToPdfAndPage(CurrentRow(2).ToString)(0))]" sap:VirtualizedContainerService.HintSize="621,87" sap2010:WorkflowViewState.IdRef="ExtractPDFPageRange_2" OutputFileName="[CurrentDir+&quot;\Output\Duplicate\&quot;+&quot;Duplicate_&quot;+CurrentRow(4).ToString+&quot;_&quot;+CurrentRow(5).ToString+&quot;_&quot;+CurrentRow(2).ToString+&quot;.pdf&quot;]" Range="[(PageCount/2 + RollNoToPdfAndPage(CurrentRow(2).ToString)(1)).ToString]" />
                    <Sequence DisplayName="LiveStatus_Sequence" sap:VirtualizedContainerService.HintSize="621,318" sap2010:WorkflowViewState.IdRef="Sequence_19">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="LiveMessage" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262,64" sap2010:WorkflowViewState.IdRef="Assign_10">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[LiveMessage]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String" xml:space="preserve">["Mailing Admit Card of " + CurrentRow(2).ToString + " to " +CurrentRow(5).ToString + 
vbNewLine +
"Total Admit Card sent : " +(ExcelDataTable.Rows.IndexOf(CurrentRow)+1).ToString + " / " + ExcelDataTable.RowCount.ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Double">[LiveProgress]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Double">[0.3+((ExcelDataTable.Rows.IndexOf(CurrentRow)+1)/ExcelDataTable.RowCount)*0.7]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <u:Live_Status ColorText="{x:Null}" ColorBackground="white" ColorBorder="blue" Container="[LiveStatus]" DisplayName="Live Status" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Live_Status_3" Location="[{&quot;center&quot;,&quot;center&quot;}]" Message="[LiveMessage]" Mobile="True" Opacity="1" Progress="[LiveProgress]" Top="True">
                        <u:Live_Status.ProgressAutoClose>
                          <InArgument x:TypeArguments="x:Boolean" />
                        </u:Live_Status.ProgressAutoClose>
                      </u:Live_Status>
                    </Sequence>
                    <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" Body="Team-IESians" DisplayName="Send SMTP Mail Message" Email="pat31.khata@gmail.com" EnableSSL="True" From="pat31.khata@gmail.com" sap:VirtualizedContainerService.HintSize="621,149" sap2010:WorkflowViewState.IdRef="SendMail_1" IsBodyHtml="False" Name="DCoE Office" Password="moe@pat31" Port="465" SecureConnection="Auto" Server="smtp.gmail.com" Subject="[&quot;This is your Admit card &quot; + CurrentRow(2).ToString]" To="[CurrentRow(6).ToString]">
                      <ui:SendMail.Files>
                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                          <InArgument x:TypeArguments="x:String">[PdfOriginalPath]</InArgument>
                        </scg:List>
                      </ui:SendMail.Files>
                    </ui:SendMail>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="304,256" sap2010:WorkflowViewState.IdRef="Sequence_14">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[ErrorCount]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[ErrorCount+1]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,64" sap2010:WorkflowViewState.IdRef="Assign_20">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[ErrorMsg]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String" xml:space="preserve">[ErrorMsg + vbNewLine +
CurrentRow(0).ToString + ".   "+CurrentRow(2).ToString+"    "+CurrentRow(1).ToString+"    "+ CurrentRow(6).ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
      </ui:ForEachRow>
      <u:Close_Status Container="[LiveStatus]" DisplayName="Close Status" sap:VirtualizedContainerService.HintSize="1088,22" sap2010:WorkflowViewState.IdRef="Close_Status_1" />
      <Assign sap:VirtualizedContainerService.HintSize="1088,64" sap2010:WorkflowViewState.IdRef="Assign_21">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[FinalSummary]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">["Successfully Mailed Admit Cards : " + (ExcelDataTable.RowCount-ErrorCount).ToString +
vbNewLine +
"Failed to send Admit cards : " + ErrorCount.ToString +
vbNewLine +
vbNewLine +
"Following are the details of failed Emails" +
vbNewLine+
ErrorMsg]</InArgument>
        </Assign.Value>
      </Assign>
      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="1088,64" sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="[FinalSummary]" />
      <ui:WriteTextFile DisplayName="Write Text File" FileName="[CurrentDir+&quot;\debug\Summary.txt&quot;]" sap:VirtualizedContainerService.HintSize="1088,134" sap2010:WorkflowViewState.IdRef="WriteTextFile_2" Text="[FinalSummary]" />
      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="1088,85" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[FinalSummary]" />
    </Sequence>
  </Sequence>
</Activity>